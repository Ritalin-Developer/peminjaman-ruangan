services:
  database:
    container_name: database
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - golang-postgres
    environment:
      - POSTGRES_DB=peminjaman-ruangan
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    image: frontend
    build: ./frontend
    restart: always
    volumes:
      - type: bind
        source: ./frontend/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    networks:
      - golang-postgres
    ports:
      - 3081:80
  
  backend:
    container_name: backend
    restart: always
    build:
      context: backend
      target: builder
    volumes:
      - ./backend:/usr/src/app
    secrets:
      - app.env
    networks:
      - golang-postgres
    ports:
      - 1118:1118
    expose:
      - 1118

networks:
  golang-postgres:

volumes:
  db-data:

secrets:
  app.env:
    file: backend/app.env
  db-password:
    file: database/password.txt